{"version":3,"sources":["../src/index.js"],"names":["fs","require","https","config","express","app","cors","connection","userRoutes","authRoutes","dataRoutes","password_resetRoutes","notificationRoutes","apiuserdataRoutes","groupRoutes","use","json","options","key","readFileSync","cert","port","process","env","PORT","createServer","listen","console","log"],"mappings":"AAAA,MAAMA,KAAKC,QAAQ,IAAR,CAAX;AACA,MAAMC,QAAQD,QAAQ,OAAR,CAAd;AACAA,QAAQ,QAAR,EAAkBE,MAAlB;AACA,MAAMC,UAAUH,QAAQ,SAAR,CAAhB;AACA,MAAMI,MAAMD,SAAZ;AACA,MAAME,OAAOL,QAAQ,MAAR,CAAb;AACA,MAAMM,aAAaN,QAAQ,MAAR,CAAnB;AACA,MAAMO,aAAaP,QAAQ,gBAAR,CAAnB;AACA,MAAMQ,aAAaR,QAAQ,eAAR,CAAnB;AACA,MAAMS,aAAaT,QAAQ,kBAAR,CAAnB;AACA,MAAMU,uBAAuBV,QAAQ,wBAAR,CAA7B;AACA,MAAMW,qBAAqBX,QAAQ,2BAAR,CAA3B;AACA,MAAMY,oBAAoBZ,QAAQ,sBAAR,CAA1B;AACA,MAAMa,cAAcb,QAAQ,sBAAR,CAApB;;AAEA;AACAM;;AAEA;AACAF,IAAIU,GAAJ,CAAQX,QAAQY,IAAR,EAAR;AACAX,IAAIU,GAAJ,CAAQT,MAAR;;AAEA;AACAD,IAAIU,GAAJ,CAAQ,YAAR,EAAsBP,UAAtB;AACAH,IAAIU,GAAJ,CAAQ,WAAR,EAAqBN,UAArB;AACAJ,IAAIU,GAAJ,CAAQ,WAAR,EAAqBL,UAArB;AACAL,IAAIU,GAAJ,CAAQ,qBAAR,EAA+BJ,oBAA/B;AACAN,IAAIU,GAAJ,CAAQ,mBAAR,EAA6BH,kBAA7B;AACAP,IAAIU,GAAJ,CAAQ,kBAAR,EAA4BF,iBAA5B;AACAR,IAAIU,GAAJ,CAAQ,YAAR,EAAsBD,WAAtB;;AAEA,MAAMG,UAAU;AACdC,OAAKlB,GAAGmB,YAAH,CAAgB,SAAhB,CADS;AAEdC,QAAMpB,GAAGmB,YAAH,CAAgB,UAAhB;AAFQ,CAAhB;AAIA,MAAME,OAAOC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AACA;AACAtB,MACGuB,YADH,CACgBR,OADhB,EACyBZ,GADzB,EAEGqB,MAFH,CAEUL,IAFV,EAEgBM,QAAQC,GAAR,CAAa,uBAAsBP,IAAK,EAAxC,CAFhB","file":"index.js","sourcesContent":["const fs = require(\"fs\");\r\nconst https = require(\"https\");\r\nrequire(\"dotenv\").config();\r\nconst express = require(\"express\");\r\nconst app = express();\r\nconst cors = require(\"cors\");\r\nconst connection = require(\"./db\");\r\nconst userRoutes = require(\"./routes/users\");\r\nconst authRoutes = require(\"./routes/auth\");\r\nconst dataRoutes = require(\"./routes/apidata\");\r\nconst password_resetRoutes = require(\"./routes/passwordReset\");\r\nconst notificationRoutes = require(\"./routes/notificationdata\");\r\nconst apiuserdataRoutes = require(\"./routes/apiuserdata\");\r\nconst groupRoutes = require(\"./routes/groupRoutes\");\r\n\r\n// database connection\r\nconnection();\r\n\r\n// middlewares\r\napp.use(express.json());\r\napp.use(cors());\r\n\r\n// routes\r\napp.use(\"/api/users\", userRoutes);\r\napp.use(\"/api/auth\", authRoutes);\r\napp.use(\"/api/data\", dataRoutes);\r\napp.use(\"/api/password-reset\", password_resetRoutes);\r\napp.use(\"/api/notification\", notificationRoutes);\r\napp.use(\"/api/apiuserdata\", apiuserdataRoutes);\r\napp.use(\"/api/group\", groupRoutes);\r\n\r\nconst options = {\r\n  key: fs.readFileSync(\"key.pem\"),\r\n  cert: fs.readFileSync(\"cert.pem\"),\r\n};\r\nconst port = process.env.PORT || 8080;\r\n//app.listen(port, console.log(`Listening on port ${port}...`));\r\nhttps\r\n  .createServer(options, app)\r\n  .listen(port, console.log(`server runs on port ${port}`));\r\n"]}