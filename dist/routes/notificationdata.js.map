{"version":3,"sources":["../../src/routes/notificationdata.js"],"names":["router","require","Router","Notification","validate","get","req","res","groupId","query","error","body","status","send","message","details","notifications","find","ignore","group","sort","_id","json","console","log","post","time","formattedTime","Date","notification","findOne","save","sendStatus","module","exports"],"mappings":"AAAA,MAAMA,SAASC,QAAQ,SAAR,EAAmBC,MAAnB,EAAf;AACA,MAAM,EAAEC,YAAF,EAAgBC,QAAhB,KAA6BH,QAAQ,4BAAR,CAAnC;AACAD,OAAOK,GAAP,CAAW,2BAAX,EAAwC,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC1D,MAAI;AACF,UAAMC,UAAUF,IAAIG,KAAJ,CAAUD,OAA1B;AACA,UAAM,EAAEE,KAAF,KAAYN,SAASE,IAAIK,IAAb,CAAlB;AACA,QAAID,KAAJ,EACE,OAAOH,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAASJ,MAAMK,OAAN,CAAc,CAAd,EAAiBD,OAA5B,EAArB,CAAP;;AAEF,UAAME,gBAAgB,MAAMb,aAAac,IAAb,CAAkB;AAC5CC,cAAQ,OADoC;AAE5CC,aAAOX;AAFqC,KAAlB,EAGzBY,IAHyB,CAGpB;AACNC,WAAK,CAAC;AADA,KAHoB,CAA5B;AAMA,QAAIL,aAAJ,EAAmB,OAAOT,IAAIe,IAAJ,CAASN,aAAT,CAAP;AACpB,GAbD,CAaE,OAAON,KAAP,EAAc;AACda,YAAQC,GAAR,CAAYd,KAAZ;AACAH,QAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,uBAAX,EAArB;AACD;AACF,CAlBD;AAmBAd,OAAOyB,IAAP,CAAY,uBAAZ,EAAqC,OAAOnB,GAAP,EAAYC,GAAZ,KAAoB;AACvD,MAAI;AACF,UAAM,EAAEmB,IAAF,KAAWpB,IAAIK,IAArB;AACA,UAAMH,UAAUF,IAAIG,KAAJ,CAAUD,OAA1B;;AAEA;AACA,UAAMmB,gBAAgB,IAAIC,IAAJ,CAASF,IAAT,CAAtB;;AAEA;AACA,UAAMG,eAAe,MAAM1B,aAAa2B,OAAb,CAAqB;AAC9CJ,YAAMC,aADwC;AAE9CR,aAAOX;AAFuC,KAArB,CAA3B;AAIA,QAAI,CAACqB,YAAL,EAAmB;AACjB,aAAOtB,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,wBAAX,EAArB,CAAP;AACD;;AAED;AACAe,iBAAaX,MAAb,GAAsB,MAAtB;AACA,UAAMW,aAAaE,IAAb,EAAN;;AAEAxB,QAAIyB,UAAJ,CAAe,GAAf;AACD,GArBD,CAqBE,OAAOtB,KAAP,EAAc;AACda,YAAQC,GAAR,CAAYd,KAAZ;AACAH,QAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,uBAAX,EAArB;AACD;AACF,CA1BD;;AA4BAmB,OAAOC,OAAP,GAAiBlC,MAAjB","file":"notificationdata.js","sourcesContent":["const router = require(\"express\").Router();\r\nconst { Notification, validate } = require(\"../models/notificationdata\");\r\nrouter.get(\"/latestdata/notifications\", async (req, res) => {\r\n  try {\r\n    const groupId = req.query.groupId;\r\n    const { error } = validate(req.body);\r\n    if (error)\r\n      return res.status(400).send({ message: error.details[0].message });\r\n\r\n    const notifications = await Notification.find({\r\n      ignore: \"false\",\r\n      group: groupId,\r\n    }).sort({\r\n      _id: -1,\r\n    });\r\n    if (notifications) return res.json(notifications);\r\n  } catch (error) {\r\n    console.log(error);\r\n    res.status(500).send({ message: \"Internal Server Error\" });\r\n  }\r\n});\r\nrouter.post(\"/notifications/ignore\", async (req, res) => {\r\n  try {\r\n    const { time } = req.body;\r\n    const groupId = req.query.groupId;\r\n\r\n    // Convert the time to a JavaScript Date object\r\n    const formattedTime = new Date(time);\r\n\r\n    // Find the notification with the given time\r\n    const notification = await Notification.findOne({\r\n      time: formattedTime,\r\n      group: groupId,\r\n    });\r\n    if (!notification) {\r\n      return res.status(404).send({ message: \"Notification not found\" });\r\n    }\r\n\r\n    // Update the 'ignore' value to true\r\n    notification.ignore = \"true\";\r\n    await notification.save();\r\n\r\n    res.sendStatus(200);\r\n  } catch (error) {\r\n    console.log(error);\r\n    res.status(500).send({ message: \"Internal Server Error\" });\r\n  }\r\n});\r\n\r\nmodule.exports = router;\r\n"]}